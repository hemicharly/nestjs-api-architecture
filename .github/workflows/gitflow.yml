name: Gitflow Workflow

on:
  push:
    branches:
      - main
      - develop
      - "feature/*"
      - "hotfix/*"

permissions:
  contents: write
  pull-requests: write

jobs:
  gitflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      # Sync main to develop
      - name: Create Pull Request for Main to Develop
        if: github.ref_name && github.ref_name == 'main'
        run: |
          # Check if PR already exists (open or closed)
          if gh pr view --base develop --head "main" > /dev/null 2>&1; then
            echo "PR from main to develop already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --base develop \
              --head main \
              --title "Sync main to develop" \
              --body "Automated Pull Request to sync changes from 'main' to 'develop'."
          fi

      # Feature to Develop
      - name: Create Pull Request for Feature to Develop
        if: github.ref_name && startsWith(github.ref, 'refs/heads/feature/')
        run: |
          # Extract branch name
          FEATURE_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          
          # Check if PR already exists (open or closed)
          if gh pr view --base develop --head "$FEATURE_BRANCH" > /dev/null 2>&1; then
            echo "PR from $FEATURE_BRANCH to develop already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --base develop \
              --head "$FEATURE_BRANCH" \
              --title "Feature: Merge $FEATURE_BRANCH into Develop" \
              --body "This Pull Request merges the feature branch '$FEATURE_BRANCH' into 'develop'."
          fi

      # Hotfix to Main and Develop
      - name: Create Pull Request for Hotfix to Main and Develop
        if: github.ref_name && startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
          # Extract branch name
          HOTFIX_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')

          # Check if PR already exists (open or closed)
          if gh pr view --base main --head "$HOTFIX_BRANCH" > /dev/null 2>&1; then
            echo "PR from $HOTFIX_BRANCH to main already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --base main \
              --head "$HOTFIX_BRANCH" \
              --title "Hotfix: Merge $HOTFIX_BRANCH into Main" \
              --body "This PR fixes critical issues in production."
          fi

          # PR for hotfix to develop
          if gh pr list --base develop --head "$HOTFIX_BRANCH" --json id | grep -q id; then
            echo "PR from $HOTFIX_BRANCH to develop already exists. Skipping."
          else
            gh pr create \
              --base develop \
              --head "$HOTFIX_BRANCH" \
              --title "Hotfix: Sync $HOTFIX_BRANCH with Develop" \
              --body "This PR ensures hotfix changes are merged into 'develop'."
          fi

      # Fetch and Validate Conflicts
      - name: Fetch and Validate State
        run: |
          git fetch --all
          if ! git merge-base --is-ancestor main develop; then
            echo "Conflict detected between main and develop. Manual resolution required."
            exit 1
          fi

      # Notifications (Optional)
      - name: Notify on Success
        if: success()
        run: echo "Gitflow automation completed successfully!"
