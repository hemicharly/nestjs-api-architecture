name: Gitflow

on:
  push:
    branches:
      - main
      - "release/*"
      - "feature/*"
      - "hotfix/*"
      - "bugfix/*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  gitflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      # Sync main to develop
      - name: Create and Merge Pull Request for Main to Develop
        if: github.ref_name && github.ref_name == 'main'
        run: |
          # Extract branch name
          MAIN_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/sync-main-to-develop.md)
          
          # Check if PR already exists
          EXISTING_PR=$(gh pr list --base develop --head "$MAIN_BRANCH" --json state --jq '.[] | select(.state == "OPEN" or .state == "MERGED" or .state == "CLOSED")')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "PR from $MAIN_BRANCH to develop already exists (open, closed, or merged). Skipping."
          else
            # Create the pull request
            PR_URL=$(gh pr create \
              --label "gitflow" \
              --base develop \
              --head "$MAIN_BRANCH" \
              --title "Sync $MAIN_BRANCH to develop" \
              --body "$PR_BODY")

            # Extract PR number from URL
            PR_NUMBER=$(echo $PR_URL | sed 's/.*#\([0-9]*\)$/\1/')
            echo "Merge Pull Request: $PR_NUMBER"
  
            # Wait for the PR to be created and then merge it
            gh pr merge "$PR_NUMBER" --merge --auto
          fi


      # Release to Main
      - name: Create Pull Request for Release to Main
        if: github.ref_name && startsWith(github.ref, 'refs/heads/release/')
        run: |
          # Extract branch name
          RELEASE_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')

          PR_DESCRIPTION="This Pull Request merges the release branch '$RELEASE_BRANCH' into 'main'."
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/release.md)
          PR_BODY=$(echo "$PR_BODY" | sed "s|\$PR_DESCRIPTION|$PR_DESCRIPTION|g")
          
          # Check if PR already exists (open, closed, or merged)
          EXISTING_PR=$(gh pr list --base main --head "$RELEASE_BRANCH" --json state --jq '.[] | select(.state == "OPEN" or .state == "MERGED" or .state == "CLOSED")')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "PR from $RELEASE_BRANCH to develop already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --label "gitflow" \
              --base main \
              --head "$RELEASE_BRANCH" \
              --title "Merge $RELEASE_BRANCH into Main" \
              --body "$PR_BODY"
          fi


      # Feature to Develop
      - name: Create Pull Request for Feature to Develop
        if: github.ref_name && startsWith(github.ref, 'refs/heads/feature/')
        run: |
          # Extract branch name
          FEATURE_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          
          PR_DESCRIPTION="This Pull Request merges the feature branch '$FEATURE_BRANCH' into 'develop'. It has implementations and functionality improvements."
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/feature.md)
          PR_BODY=$(echo "$PR_BODY" | sed "s|\$PR_DESCRIPTION|$PR_DESCRIPTION|g")
          
          # Check if PR already exists (open, closed, or merged)
          EXISTING_PR=$(gh pr list --base develop --head "$FEATURE_BRANCH" --json state --jq '.[] | select(.state == "OPEN" or .state == "MERGED" or .state == "CLOSED")')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "PR from $FEATURE_BRANCH to develop already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --label "gitflow" \
              --base develop \
              --head "$FEATURE_BRANCH" \
              --title "Feature: Merge $FEATURE_BRANCH into Develop" \
              --body "$PR_BODY"
          fi
          

      # Bugfix to Develop
      - name: Create Pull Request for Bugfix to Develop
        if: github.ref_name && startsWith(github.ref, 'refs/heads/bugfix/')
        run: |
          # Extract branch name
          BUGFIX_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          
          PR_DESCRIPTION="This Pull Request merges the hotfix branch '$BUGFIX_BRANCH' into 'develop'."
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/hotfix_bugfix.md)
          PR_BODY=$(echo "$PR_BODY" | sed "s|\$PR_DESCRIPTION|$PR_DESCRIPTION|g")

          # PR for bugfix to develop
          if gh pr list --base develop --head "$BUGFIX_BRANCH" --json id | grep -q id; then
            echo "PR from $HOTFIX_BRANCH to develop already exists. Skipping."
          else
            gh pr create \
              --label "gitflow" \
              --base develop \
              --head "$BUGFIX_BRANCH" \
              --title "Bugfix: Merge $$BUGFIX_BRANCH into Develop" \
              --body "$PR_BODY"
          fi


      # Hotfix to Main and Develop
      - name: Create Pull Request for Hotfix to Main and Develop
        if: github.ref_name && startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
          # Extract branch name
          HOTFIX_BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          
          PR_DESCRIPTION="This Pull Request merges the hotfix branch '$HOTFIX_BRANCH' into 'main'. Fixes critical issues in **production**."
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/hotfix_bugfix.md)
          PR_BODY=$(echo "$PR_BODY" | sed "s|\$PR_DESCRIPTION|$PR_DESCRIPTION|g")

          # Check if PR already exists (open, closed, or merged)
          EXISTING_PR=$(gh pr list --base develop --head "$HOTFIX_BRANCH" --json state --jq '.[] | select(.state == "OPEN" or .state == "MERGED" or .state == "CLOSED")')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "PR from $HOTFIX_BRANCH to main already exists (open, closed, or merged). Skipping."
          else
            gh pr create \
              --label "gitflow" \
              --base main \
              --head "$HOTFIX_BRANCH" \
              --title "Hotfix: Merge $HOTFIX_BRANCH into Main" \
              --body "$PR_BODY"
          fi
          
          PR_DESCRIPTION="This Pull Request merges the hotfix branch '$HOTFIX_BRANCH' into 'develop'. Fixes critical issues in **production**."
          PR_BODY=$(cat .github/PULL_REQUEST_TEMPLATE/hotfix_bugfix.md)
          PR_BODY=$(echo "$PR_BODY" | sed "s|\$PR_DESCRIPTION|$PR_DESCRIPTION|g")

          # PR for hotfix to develop
          if gh pr list --base develop --head "$HOTFIX_BRANCH" --json id | grep -q id; then
            echo "PR from $HOTFIX_BRANCH to develop already exists. Skipping."
          else
            gh pr create \
              --label "gitflow" \
              --base develop \
              --head "$HOTFIX_BRANCH" \
              --title "Hotfix: Merge $HOTFIX_BRANCH into Develop" \
              --body "$PR_BODY"
          fi

      # Notifications (Optional)
      - name: Notify on Success
        if: success()
        run: echo "Gitflow automation completed successfully!"
